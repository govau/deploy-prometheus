# This file assumes bosh_exporter based Service Discovery is being used: ./monitor-bosh.yml

# Exporter jobs
- type: replace
  path: /instance_groups/name=prometheus2/jobs/-
  value:
    name: blackbox_exporter
    release: prometheus
    properties:
      blackbox_exporter:
        config:
          modules:
            http_301:
              prober: http
              timeout: 5s
              http:
                valid_status_codes: [301]
                no_follow_redirects: true
                fail_if_ssl: true
                fail_if_not_ssl: false
                preferred_ip_protocol: "ip4"
            https_200:
              prober: http
              timeout: 5s
              http:
                valid_status_codes: [200]
                no_follow_redirects: true
                fail_if_ssl: false
                fail_if_not_ssl: true
                preferred_ip_protocol: "ip4"
            https_301:
              prober: http
              timeout: 5s
              http:
                valid_status_codes: [301]
                no_follow_redirects: true
                fail_if_ssl: false
                fail_if_not_ssl: true
                preferred_ip_protocol: "ip4"
            https_302:
              prober: http
              timeout: 5s
              http:
                valid_status_codes: [302]
                no_follow_redirects: true
                fail_if_ssl: false
                fail_if_not_ssl: true
                preferred_ip_protocol: "ip4"
            https_200_slow:
              prober: http
              timeout: 20s # setting to match the global prometheus scrape-timeout
              http:
                valid_status_codes: [200]
                no_follow_redirects: true
                fail_if_ssl: false
                fail_if_not_ssl: true
                preferred_ip_protocol: "ip4"
            https_4xx:
              prober: http
              timeout: 5s
              http:
                valid_status_codes: [400, 401, 403, 404]
                no_follow_redirects: true
                fail_if_ssl: false
                fail_if_not_ssl: true
                preferred_ip_protocol: "ip4"
            tcp_tls_connect:
              prober: tcp
              timeout: 5s
              tcp:
                preferred_ip_protocol: "ip4"

# Prometheus Scrape Config
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: blackbox_http_200
    metrics_path: /probe
    params:
      module:
        - http_301
    static_configs:
      - targets: ((http_301_probe_endpoints))
    relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: localhost:9115
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: blackbox_https_200
    metrics_path: /probe
    params:
      module:
        - https_200
    static_configs:
      - targets: ((https_200_probe_endpoints))
    relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: localhost:9115

- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: blackbox_https_301
    metrics_path: /probe
    params:
      module:
        - https_301
    static_configs:
      - targets: ((https_301_probe_endpoints))
    relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: localhost:9115

- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: blackbox_https_302
    metrics_path: /probe
    params:
      module:
        - https_302
    static_configs:
      - targets: ((https_302_probe_endpoints))
    relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: localhost:9115

- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: blackbox_https_200_slow
    metrics_path: /probe
    params:
      module:
        - https_200_slow
    static_configs:
      - targets: ((https_200_slow_probe_endpoints))
    relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: localhost:9115

# check availability of sites with access restrictions in place
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: blackbox_https_4xx
    metrics_path: /probe
    params:
      module:
        - https_4xx
    static_configs:
      - targets: ((https_4xx_probe_endpoints))
    relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: localhost:9115

# Probe the targets under tcp_smtp_probe_endpoints for availability and TLS.
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/scrape_configs/-
  value:
    job_name: blackbox_tcp_tls
    metrics_path: /probe
    params:
      module:
        - tcp_tls_connect
    static_configs:
      - targets: ((tcp_smtp_probe_endpoints))
    relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: localhost:9115

# Prometheus Alerts
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=probe_alerts?/release
  value: prometheus

- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=prometheus2/properties/prometheus/rule_files/-
  value: /var/vcap/jobs/probe_alerts/*.alerts.yml

# Warning alerts when certificates expire in less than 30 days (default is 7)
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=probe_alerts/properties?/probe_alerts/cert_expiry_warning/threshold
  value: 2592000
# Critical alerts when certificates expire in less than 7 days (default is 24 hours)
- type: replace
  path: /instance_groups/name=prometheus2/jobs/name=probe_alerts/properties?/probe_alerts/cert_expiry_critical/threshold
  value: 604800

# Grafana Dashboards
- type: replace
  path: /instance_groups/name=grafana/jobs/name=probe_dashboards?/release
  value: prometheus

- type: replace
  path: /instance_groups/name=grafana/jobs/name=grafana/properties/grafana/prometheus/dashboard_files?/-
  value: /var/vcap/jobs/probe_dashboards/*.json
