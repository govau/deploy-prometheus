---
# Add 3 Webserver instances in a public subnet
# - prometheus
# - alertmanager
# - grafana
# nginx instances have HTTPS termination support thanks to HAProxy in front
- type: replace
  path: /releases/-
  value:
    name: haproxy
    version: 9.5.0
    url: https://github.com/cloudfoundry-incubator/haproxy-boshrelease/releases/download/v9.5.0/haproxy-9.5.0.tgz
    sha1: 651abdeb879f1b5cd3f59a231cb9102b41ffaafd

- type: replace
  path: /releases/-
  value:
    name: "bpm"
    version: "1.0.4"
    url: "https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=1.0.4"
    sha1: "41df19697d6a69d2552bc2c132928157fa91abe0"

- type: replace
  # path: /instance_groups/name=grafana/jobs/name=grafana/consumes?
  # value:
  #   nginx: {from: nginx_grafana}
  path: /instance_groups/name=grafana/jobs/name=grafana/consumes?/nginx
  value:
    from: nginx_grafana

# add 3 new nginx hosts
- type: replace
  path: /instance_groups/-
  value:
    name: nginx-prometheus
    azs: [ z1, z2, z3 ]
    instances: 1
    vm_type: small
    stemcell: default
    vm_extensions: [monitoring]
    networks:
      - name: Public
        default: [dns, gateway, addressable]
      - name: Internet
        static_ips: [((prometheus_external_ip))]
    jobs:
      - name: nginx
        release: prometheus
        provides:
          nginx: {as: nginx_prometheus}
        consumes:
          prometheus: {from: prometheus_monitoring_env}
        properties:
          nginx:
            alertmanager:
              auth_users:
                - name: admin
                  password: ((alertmanager_password))
            prometheus:
              auth_users:
                - name: admin
                  password: ((prometheus_password))
      - name: bpm
        release: bpm
      - name: haproxy
        release: haproxy
        properties:
          ha_proxy:
            backend_port: 9090
            backend_servers: ["127.0.0.1"]
            disable_http: true
            ssl_pem:
            - ((prometheus_tls_cert))

- type: replace
  path: /instance_groups/-
  value:
    name: nginx-alertmanager
    azs: [ z1, z2, z3 ]
    instances: 1
    vm_type: small
    stemcell: default
    vm_extensions: [monitoring]
    networks:
      - name: Public
        default: [dns, gateway, addressable]
      - name: Internet
        static_ips: [((alertmanager_external_ip))]
    jobs:
      - name: nginx
        release: prometheus
        provides:
          nginx: {as: nginx_alertmanager}
        consumes:
          prometheus: {from: prometheus_monitoring_env}
        properties:
          nginx:
            alertmanager:
              auth_users:
                - name: admin
                  password: ((alertmanager_password))
            prometheus:
              auth_users:
                - name: admin
                  password: ((prometheus_password))
      - name: bpm
        release: bpm
      - name: haproxy
        release: haproxy
        properties:
          ha_proxy:
            backend_port: 9093
            backend_servers: ["127.0.0.1"]
            disable_http: true
            ssl_pem:
            - ((alertmanager_tls_cert))

- type: replace
  path: /instance_groups/-
  value:
    name: nginx-grafana
    azs: [ z1, z2, z3 ]
    instances: 1
    vm_type: small
    stemcell: default
    vm_extensions: [monitoring]
    networks:
      - name: Public
        default: [dns, gateway, addressable]
      - name: Internet
        static_ips: [((grafana_external_ip))]
    jobs:
      - name: nginx
        release: prometheus
        provides:
          nginx: {as: nginx_grafana}
        consumes:
          prometheus: {from: prometheus_monitoring_env}
        properties:
          nginx:
            alertmanager:
              auth_users:
                - name: admin
                  password: ((alertmanager_password))
            prometheus:
              auth_users:
                - name: admin
                  password: ((prometheus_password))
      - name: bpm
        release: bpm
      - name: haproxy
        release: haproxy
        properties:
          ha_proxy:
            backend_port: 3000
            backend_servers: ["127.0.0.1"]
            disable_http: true
            ssl_pem:
            - ((grafana_tls_cert))
