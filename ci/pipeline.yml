groups: []
resources:
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: prometheus-boshrelease.github-release
  type: github-release
  source:
    access_token: ((github-read-public-repos-token))
    owner: bosh-prometheus
    repository: prometheus-boshrelease
- name: deploy-prometheus.git
  type: git
  source:
    branch: master
    uri: https://github.com/govau/deploy-prometheus.git
- name: ops.git
  type: git
  source:
    branch: master
    paths:
    - monitoring/*.yml
    private_key: ((ops-git-deploy-key))
    uri: git@github.com:AusDTO/ops.git
- name: slack
  type: slack-notification
  source:
    url: ((concourse-slack-webhook-url))
- name: deployment-dev
  type: bosh2-deployment
  source:
    ca_cert: ((bosh_ca_cert))
    client: ((bosh_client))
    client_secret: ((bosh_client_secret))
    deployment: prometheus-dev
    target: ((bosh_target))
- name: deployment
  type: bosh2-deployment
  source:
    ca_cert: ((bosh_ca_cert))
    client: ((bosh_client))
    client_secret: ((bosh_client_secret))
    deployment: prometheus
    target: ((bosh_target))
- name: cert-alertmanager.s3
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_certs_bucket))
    region_name: ap-southeast-2
    secret_access_key: ((aws_secret_access_key))
    server_side_encryption: AES256
    versioned_file: ((alertmanager_external_hostname)).crt
- name: cert-grafana.s3
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_certs_bucket))
    region_name: ap-southeast-2
    secret_access_key: ((aws_secret_access_key))
    server_side_encryption: AES256
    versioned_file: ((grafana_external_hostname)).crt
- name: cert-prometheus.s3
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_certs_bucket))
    region_name: ap-southeast-2
    secret_access_key: ((aws_secret_access_key))
    server_side_encryption: AES256
    versioned_file: ((prometheus_external_hostname)).crt
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: bosh2-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
    tag: v2.6.1
jobs:
- name: fetch
  plan:
  - aggregate:
    - get: prometheus-boshrelease.github-release
      trigger: true
      params:
        include_source_tarball: true
    - get: ops.git
      trigger: true
    - get: deploy-prometheus.git
      trigger: true
  on_failure:
    put: slack
    params:
      text: |
        :x: $ATC_EXTERNAL_URL - FAILED to fetch prometheus boshrelease
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: $ATC_EXTERNAL_URL - Successfully fetched new prometheus boshrelease - $TEXT_FILE_CONTENT
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      text_file: prometheus-boshrelease.github-release/tag
- name: test-it
  serial_groups:
  - prometheus-dev
  plan:
  - aggregate:
    - get: stemcell
    - get: slack
      passed:
      - fetch
      trigger: true
    - get: ops.git
      passed:
      - fetch
    - get: prometheus-boshrelease.github-release
      passed:
      - fetch
      params:
        include_source_tarball: true
    - get: deploy-prometheus.git
      passed:
      - fetch
  - task: extract-release-src
    file: deploy-prometheus.git/ci/tasks/extract-release-src.yml
  - put: deployment-dev
    params:
      manifest: prometheus-boshrelease.src/manifests/prometheus.yml
      ops_files:
      - prometheus-boshrelease.src/manifests/operators/monitor-bosh.yml
      - prometheus-boshrelease.src/manifests/operators/monitor-concourse.yml
      - deploy-prometheus.git/operators/use-uaa-with-bosh.yml
      - deploy-prometheus.git/operators/deployment-name.yml
      - deploy-prometheus.git/operators/bosh-dns-addon.yml
      - deploy-prometheus.git/operators/monitor-certwatch.yml
      - deploy-prometheus.git/operators/monitor-cloudfoundry.yml
      - deploy-prometheus.git/operators/monitor-http-probe.yml
      - deploy-prometheus.git/operators/prometheus-federation.yml
      - deploy-prometheus.git/operators/prometheus-sandpit.yml
      - deploy-prometheus.git/operators/prometheus-staging.yml
      - deploy-prometheus.git/operators/prometheus-prod.yml
      - deploy-prometheus.git/operators/dta-aws-cloud-config.yml
      - deploy-prometheus.git/operators/increase-prometheus-global-scrape-timeout.yml
      releases:
      - prometheus-boshrelease.github-release/*.tgz
      stemcells:
      - stemcell/*.tgz
      vars:
        bosh_ca_cert: ((bosh_ca_cert))
        bosh_client: ((bosh_client))
        bosh_client_secret: ((bosh_client_secret))
        bosh_url: ((bosh_target))
        deployment-name: prometheus-dev
        metrics_environment: m-cld-dev
        prod_env_api_url: ((prod_env_api_url))
        prod_env_bosh_ca_cert: ((prod_env_bosh_ca_cert))
        prod_env_bosh_client: ((prod_env_bosh_client))
        prod_env_bosh_client_secret: ((prod_env_bosh_client_secret))
        prod_env_bosh_url: ((prod_env_bosh_url))
        prod_env_doppler_url: ((prod_env_doppler_url))
        prod_env_metrics_environment: ((prod_env_metrics_environment))
        prod_env_uaa_clients_cf_exporter_secret: ((prod_env_uaa_clients_cf_exporter_secret))
        prod_env_uaa_clients_firehose_exporter_secret: ((prod_env_uaa_clients_firehose_exporter_secret))
        prod_env_uaa_url: ((prod_env_uaa_url))
        sandpit_env_api_url: ((sandpit_env_api_url))
        sandpit_env_bosh_ca_cert: ((sandpit_env_bosh_ca_cert))
        sandpit_env_bosh_client: ((sandpit_env_bosh_client))
        sandpit_env_bosh_client_secret: ((sandpit_env_bosh_client_secret))
        sandpit_env_bosh_url: ((sandpit_env_bosh_url))
        sandpit_env_doppler_url: ((sandpit_env_doppler_url))
        sandpit_env_metrics_environment: ((sandpit_env_metrics_environment))
        sandpit_env_uaa_clients_cf_exporter_secret: ((sandpit_env_uaa_clients_cf_exporter_secret))
        sandpit_env_uaa_clients_firehose_exporter_secret: ((sandpit_env_uaa_clients_firehose_exporter_secret))
        sandpit_env_uaa_url: ((sandpit_env_uaa_url))
        skip_ssl_verify: false
        staging_env_api_url: ((staging_env_api_url))
        staging_env_bosh_ca_cert: ((staging_env_bosh_ca_cert))
        staging_env_bosh_client: ((staging_env_bosh_client))
        staging_env_bosh_client_secret: ((staging_env_bosh_client_secret))
        staging_env_bosh_url: ((staging_env_bosh_url))
        staging_env_doppler_url: ((staging_env_doppler_url))
        staging_env_metrics_environment: ((staging_env_metrics_environment))
        staging_env_uaa_clients_cf_exporter_secret: ((staging_env_uaa_clients_cf_exporter_secret))
        staging_env_uaa_clients_firehose_exporter_secret: ((staging_env_uaa_clients_firehose_exporter_secret))
        staging_env_uaa_url: ((staging_env_uaa_url))
      vars_files:
      - ops.git/monitoring/probe_endpoints.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: $ATC_EXTERNAL_URL - FAILED testing of prometheus boshrelease
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: $ATC_EXTERNAL_URL - Successfully tested prometheus boshrelease
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
- name: test-it-cleanup
  serial_groups:
  - prometheus-dev
  plan:
  - aggregate:
    - get: slack
      passed:
      - test-it
      trigger: true
    - get: deployment-dev
      passed:
      - test-it
    - get: deploy-prometheus.git
      passed:
      - test-it
  - task: delete-dev-deployment
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/bosh-cli
      run:
        path: sh
        args:
        - -exc
        - bosh delete-deployment -n
      inputs:
      - name: deploy-prometheus.git
    params:
      BOSH_CA_CERT: ((bosh_ca_cert))
      BOSH_CLIENT: ((bosh_client))
      BOSH_CLIENT_SECRET: ((bosh_client_secret))
      BOSH_DEPLOYMENT: prometheus-dev
      BOSH_ENVIRONMENT: ((bosh_target))
      BOSH_TARGET: ((bosh_target))
  on_failure:
    put: slack
    params:
      text: |
        :x: $ATC_EXTERNAL_URL - FAILED cleaning up dev BOSH director
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
- name: ship-it-prod
  plan:
  - aggregate:
    - get: stemcell
      passed:
      - test-it
    - get: prometheus-boshrelease.github-release
      passed:
      - test-it
      params:
        include_source_tarball: true
    - get: ops.git
      passed:
      - test-it
    - get: deploy-prometheus.git
      passed:
      - test-it
- name: deploy-to-prod
  serial_groups:
  - prometheus
  plan:
  - aggregate:
    - get: stemcell
      passed:
      - ship-it-prod
      trigger: true
    - get: prometheus-boshrelease.github-release
      passed:
      - ship-it-prod
      trigger: true
      params:
        include_source_tarball: true
    - get: ops.git
      passed:
      - ship-it-prod
      trigger: true
    - get: deploy-prometheus.git
      passed:
      - ship-it-prod
      trigger: true
    - get: cert-alertmanager.s3
      trigger: true
    - get: cert-grafana.s3
      trigger: true
    - get: cert-prometheus.s3
      trigger: true
  - task: get-dns-values
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: govau/cga-cf-bosh-cli
      run:
        path: ./deploy-prometheus.git/ci/scripts/generate-dns-values.sh
      inputs:
      - name: deploy-prometheus.git
      outputs:
      - name: dns-details
    params:
      DNS_VAR_FILE: ./dns-details/dns-vars.yml
  - task: fetch-tls-certificates
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: govau/cga-cf-bosh-cli
      run:
        path: ./deploy-prometheus.git/ci/scripts/generate-tls-certs.sh
      inputs:
      - name: deploy-prometheus.git
      - name: cert-alertmanager.s3
      - name: cert-grafana.s3
      - name: cert-prometheus.s3
      outputs:
      - name: tls-details
    params:
      TLS_CERTS_VAR_FILE: ./tls-details/tls-certs.yml
  - task: extract-release-src
    file: deploy-prometheus.git/ci/tasks/extract-release-src.yml
  - put: deployment
    params:
      manifest: prometheus-boshrelease.src/manifests/prometheus.yml
      ops_files:
      - prometheus-boshrelease.src/manifests/operators/monitor-bosh.yml
      - prometheus-boshrelease.src/manifests/operators/alertmanager-web-external-url.yml
      - prometheus-boshrelease.src/manifests/operators/prometheus-web-external-url.yml
      - prometheus-boshrelease.src/manifests/operators/monitor-concourse.yml
      - deploy-prometheus.git/operators/use-uaa-with-bosh.yml
      - deploy-prometheus.git/operators/deployment-name.yml
      - deploy-prometheus.git/operators/bosh-dns-addon.yml
      - deploy-prometheus.git/operators/remove-nginx-instance.yml
      - deploy-prometheus.git/operators/dta-platform-add-public-webhosts.yml
      - deploy-prometheus.git/operators/monitor-certwatch.yml
      - deploy-prometheus.git/operators/monitor-cloudfoundry.yml
      - deploy-prometheus.git/operators/monitor-http-probe.yml
      - deploy-prometheus.git/operators/prometheus-federation.yml
      - deploy-prometheus.git/operators/prometheus-sandpit.yml
      - deploy-prometheus.git/operators/prometheus-staging.yml
      - deploy-prometheus.git/operators/prometheus-prod.yml
      - deploy-prometheus.git/operators/dta-aws-cloud-config.yml
      - deploy-prometheus.git/operators/increase-prometheus-global-scrape-timeout.yml
      - ops.git/monitoring/alertmanager-receivers-and-routes.yml
      - ops.git/monitoring/alerts-cloud-gov-au-platform.yml
      - ops.git/monitoring/alerts-cloud-gov-au-services.yml
      - ops.git/monitoring/alerts-marketplace.yml
      - ops.git/monitoring/alerts-dashboard.yml
      - ops.git/monitoring/alerts-guides.yml
      releases:
      - prometheus-boshrelease.github-release/*.tgz
      stemcells:
      - stemcell/*.tgz
      vars:
        alertmanager_pagerduty_service_key_cloud: ((alertmanager_pagerduty_service_key_cloud))
        alertmanager_pagerduty_service_key_marketplace: ((alertmanager_pagerduty_service_key_marketplace))
        alertmanager_slack_api_url: ((alertmanager_slack_api_url))
        alertmanager_web_external_url: ((alertmanager_web_external_url))
        bosh_ca_cert: ((bosh_ca_cert))
        bosh_client: ((bosh_client))
        bosh_client_secret: ((bosh_client_secret))
        bosh_url: ((bosh_target))
        deployment-name: prometheus
        metrics_environment: m-cld
        prod_env_api_url: ((prod_env_api_url))
        prod_env_bosh_ca_cert: ((prod_env_bosh_ca_cert))
        prod_env_bosh_client: ((prod_env_bosh_client))
        prod_env_bosh_client_secret: ((prod_env_bosh_client_secret))
        prod_env_bosh_url: ((prod_env_bosh_url))
        prod_env_doppler_url: ((prod_env_doppler_url))
        prod_env_metrics_environment: ((prod_env_metrics_environment))
        prod_env_uaa_clients_cf_exporter_secret: ((prod_env_uaa_clients_cf_exporter_secret))
        prod_env_uaa_clients_firehose_exporter_secret: ((prod_env_uaa_clients_firehose_exporter_secret))
        prod_env_uaa_url: ((prod_env_uaa_url))
        prometheus_web_external_url: ((prometheus_web_external_url))
        sandpit_env_api_url: ((sandpit_env_api_url))
        sandpit_env_bosh_ca_cert: ((sandpit_env_bosh_ca_cert))
        sandpit_env_bosh_client: ((sandpit_env_bosh_client))
        sandpit_env_bosh_client_secret: ((sandpit_env_bosh_client_secret))
        sandpit_env_bosh_url: ((sandpit_env_bosh_url))
        sandpit_env_doppler_url: ((sandpit_env_doppler_url))
        sandpit_env_metrics_environment: ((sandpit_env_metrics_environment))
        sandpit_env_uaa_clients_cf_exporter_secret: ((sandpit_env_uaa_clients_cf_exporter_secret))
        sandpit_env_uaa_clients_firehose_exporter_secret: ((sandpit_env_uaa_clients_firehose_exporter_secret))
        sandpit_env_uaa_url: ((sandpit_env_uaa_url))
        skip_ssl_verify: false
        staging_env_api_url: ((staging_env_api_url))
        staging_env_bosh_ca_cert: ((staging_env_bosh_ca_cert))
        staging_env_bosh_client: ((staging_env_bosh_client))
        staging_env_bosh_client_secret: ((staging_env_bosh_client_secret))
        staging_env_bosh_url: ((staging_env_bosh_url))
        staging_env_doppler_url: ((staging_env_doppler_url))
        staging_env_metrics_environment: ((staging_env_metrics_environment))
        staging_env_uaa_clients_cf_exporter_secret: ((staging_env_uaa_clients_cf_exporter_secret))
        staging_env_uaa_clients_firehose_exporter_secret: ((staging_env_uaa_clients_firehose_exporter_secret))
        staging_env_uaa_url: ((staging_env_uaa_url))
      vars_files:
      - dns-details/dns-vars.yml
      - tls-details/tls-certs.yml
      - ops.git/monitoring/probe_endpoints.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: $ATC_EXTERNAL_URL - FAILED deployment of prometheus
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: $ATC_EXTERNAL_URL - Successfully deployed prometheus
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
